apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    operator.tekton.dev/last-applied-hash: 5ded474e493733046a784d7dc862d1144bd06a45b1df0fba06b43eee71bc5c73
    tekton.dev/displayName: s2i python
    tekton.dev/pipelines.minVersion: '0.19'
    tekton.dev/tags: 's2i, python, workspace'
  resourceVersion: '92972958'
  name: s2i-python-ml
  uid: 530aa4a1-dd3e-429b-98c7-1d25d2c21da6
  creationTimestamp: '2023-07-13T06:07:17Z'
  generation: 2
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:operator.tekton.dev/last-applied-hash': {}
            'f:tekton.dev/displayName': {}
            'f:tekton.dev/pipelines.minVersion': {}
            'f:tekton.dev/tags': {}
          'f:labels':
            .: {}
            'f:app.kubernetes.io/version': {}
            'f:operator.tekton.dev/operand-name': {}
            'f:operator.tekton.dev/provider-type': {}
          'f:ownerReferences':
            .: {}
            'k:{"uid":"8f8b1c83-4b8d-4b8b-a781-5262fbe23550"}': {}
        'f:spec':
          .: {}
          'f:description': {}
          'f:params': {}
          'f:results': {}
          'f:steps': {}
          'f:volumes': {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2023-07-13T06:21:44Z'
  namespace: adarshass
  ownerReferences:
    - apiVersion: operator.tekton.dev/v1alpha1
      controller: true
      kind: TektonInstallerSet
      name: addon-custom-clustertask-lwfts
      uid: 8f8b1c83-4b8d-4b8b-a781-5262fbe23550
  labels:
    app.kubernetes.io/version: '0.1'
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    operator.tekton.dev/provider-type: redhat
spec:
  description: >-
    s2i-python task clones a Git repository and builds and pushes a container
    image using S2I and a Python builder image.
  params:
    - default: latest
      description: The tag of python imagestream for python version
      name: VERSION
      type: string
    - default: .
      description: The location of the path to run s2i from.
      name: PATH_CONTEXT
      type: string
    - default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: quay.io/adhis/adhi-ai-ml
      description: Location of the repo where image has to be pushed
      name: IMAGE
      type: string
    - default: >-
        registry.redhat.io/rhel8/buildah@sha256:00795fafdab9bbaa22cd29d1faa1a01e604e4884a2c935c1bf8e3d1f0ad1c084
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: 'false'
      description: Skip pushing the built image
      name: SKIP_PUSH
      type: string
    - default: []
      description: Environment variables to set during _build-time_.
      name: ENV_VARS
      type: array
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
      type: string
  steps:
    - args:
        - '$(params.ENV_VARS[*])'
      env:
        - name: HOME
          value: /tekton/home
      image: >-
        registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:98d8cb3a255641ca6a1bce854e5e2460c20de9fb9b28e3cc67eb459f122873dd
      name: generate
      resources: {}
      script: >
        echo "Processing Build Environment Variables"

        echo "" > /env-vars/env-file

        for var in "$@"

        do
            echo "$var" >> /env-vars/env-file
        done


        s2i build $(params.PATH_CONTEXT)
        image-registry.openshift-image-registry.svc:5000/openshift/python@sha256:e2a461928e82d7da8991f4fdf5496219f013a6e70c4ef30cf5fb93a4cc450eac
        \

        --as-dockerfile /gen-source/Dockerfile.gen --environment-file
        /env-vars/env-file
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
        - mountPath: /env-vars
          name: env-vars
      workingDir: $(workspaces.source.path)
    - image: $(params.BUILDER_IMAGE)
      name: build-and-push
      resources: {}
      script: >
        buildah bud --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) \
           --layers -f /gen-source/Dockerfile.gen -t $(params.IMAGE) .

        [[ "$(params.SKIP_PUSH)" == "true" ]] && echo "Push skipped" && exit 0

        [[ "$(workspaces.dockerconfig.bound)" == "true" ]] && export
        DOCKER_CONFIG="$(workspaces.dockerconfig.path)"

        buildah push --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) \
          --digestfile $(workspaces.source.path)/image-digest $(params.IMAGE) \
          docker://$(params.IMAGE)

        cat $(workspaces.source.path)/image-digest | tee
        /tekton/results/IMAGE_DIGEST
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source
  volumes:
    - emptyDir: {}
      name: varlibcontainers
    - emptyDir: {}
      name: gen-source
    - emptyDir: {}
      name: env-vars
  workspaces:
    - mountPath: /workspace/source
      name: source
    - description: >-
        An optional workspace that allows providing a .docker/config.json file
        for Buildah to access the container registry. The file should be placed
        at the root of the Workspace with name config.json.
      name: dockerconfig
      optional: true
